@import url('https://fonts.googleapis.com/css2?family=Quicksand&display=swap');

:root{
    --card-width-lg:157px;
    --card-height-lg:220px;

    --card-width-sm:120px;
    --card-height-sm:168px;

    --num-cards:4;

    --card-horizontal-space-lg: 100px;
    --card-horizontal-space-sm: 50px;

    --primary-font: 'Quicksand', sans-serif;
}
body{
    /* height will take 100% view port height of the screen */
    height:100vh;
    font-family: var(--primary-font);
}

main{
    height:55%;
    display:flex;
    justify-content: center;
    border: 1px solid black;
}


.card-container{
    position: relative;
    height:100%;
    width:calc(var(--card-width-lg) * (var(--num-cards) / 2) + var(--card-horizontal-space-lg));
    display: grid;
    grid-template-columns: 1fr 1fr;
    grid-template-rows: 1fr 1fr;
    grid-template-areas: "a b"
                         "c d";
    border: 1px solid black;

}

.card-pos-a{
    grid-area: a;
    border: 1px solid black;
    background-color: grey;
}

.card-pos-b{
    grid-area: b;
    border: 1px solid black;
    background-color: rosybrown;
}

.card-pos-c{
    grid-area: c;
    border: 1px solid black;
    background-color: darkcyan;
}

.card-pos-d{
    grid-area: d;
    border: 1px solid black;
    background-color: goldenrod;
}

.card-pos-a, .card-pos-b,.card-pos-c,.card-pos-d{
    display:flex;
    justify-content: center;
    align-items: center;
}


.card{
    position:absolute;
    height:var(--card-height-lg);
    width:var(--card-width-lg);
    transition: transform 0.6s ease-in-out;

    /* perspective is a CSS property that determines the distance from the viewer to the object in 3D space. It allows you to create the illusion of depth in a 2D webpage */
    perspective: 1000px;

    /* cursor property is used to specify the type of cursor to display when the mouse pointer is over an element. */
    cursor: pointer;
}

.card.inner{
    position:relative;
    width:100%;
    height:100%;
    text-align: center;

    /* The transition CSS component is used to specify the duration and timing of a transition between two states of an element.  */
    transition: transform 0.6s;

    /* its child elements will be rendered in 3D space, allowing them to be positioned and transformed in relation to the parent element as if they were three-dimensional objects. */
    transform-style: preserve-3d;
}

.card-front, .card-back{
    position:absolute;
    width: 100%;
    height: 100%;

    /* webkit-backface-visibility is a CSS property that determines whether or not an element should be visible when it is facing away from the viewer.  */
    -webkit-backface-visibility: hidden;
    backface-visibility: hidden;

}

.card-img{
    height: 100%;


}

.card-back{
    transform: rotateY(180deg);
}

.card:hover .card.inner{
    transform: rotateY(180deg);
}